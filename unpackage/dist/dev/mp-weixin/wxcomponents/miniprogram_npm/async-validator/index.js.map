{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n  subClass.prototype = Object.create(superClass.prototype);\r\n  subClass.prototype.constructor = subClass;\r\n\r\n  _setPrototypeOf(subClass, superClass);\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\r\n    return o.__proto__ || Object.getPrototypeOf(o);\r\n  };\r\n  return _getPrototypeOf(o);\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\r\n    o.__proto__ = p;\r\n    return o;\r\n  };\r\n  return _setPrototypeOf(o, p);\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n  if (Reflect.construct.sham) return false;\r\n  if (typeof Proxy === \"function\") return true;\r\n\r\n  try {\r\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction _construct(Parent, args, Class) {\r\n  if (_isNativeReflectConstruct()) {\r\n    _construct = Reflect.construct.bind();\r\n  } else {\r\n    _construct = function _construct(Parent, args, Class) {\r\n      var a = [null];\r\n      a.push.apply(a, args);\r\n      var Constructor = Function.bind.apply(Parent, a);\r\n      var instance = new Constructor();\r\n      if (Class) _setPrototypeOf(instance, Class.prototype);\r\n      return instance;\r\n    };\r\n  }\r\n\r\n  return _construct.apply(null, arguments);\r\n}\r\n\r\nfunction _isNativeFunction(fn) {\r\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\r\n}\r\n\r\nfunction _wrapNativeSuper(Class) {\r\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\r\n\r\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\r\n    if (Class === null || !_isNativeFunction(Class)) return Class;\r\n\r\n    if (typeof Class !== \"function\") {\r\n      throw new TypeError(\"Super expression must either be null or a function\");\r\n    }\r\n\r\n    if (typeof _cache !== \"undefined\") {\r\n      if (_cache.has(Class)) return _cache.get(Class);\r\n\r\n      _cache.set(Class, Wrapper);\r\n    }\r\n\r\n    function Wrapper() {\r\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\r\n    }\r\n\r\n    Wrapper.prototype = Object.create(Class.prototype, {\r\n      constructor: {\r\n        value: Wrapper,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n    return _setPrototypeOf(Wrapper, Class);\r\n  };\r\n\r\n  return _wrapNativeSuper(Class);\r\n}\r\n\r\n/* eslint no-console:0 */\r\nvar formatRegExp = /%[sdj%]/g;\r\nvar warning = function warning() {}; // don't print warning message when in production env or node runtime\r\n\r\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && typeof document !== 'undefined') {\r\n  warning = function warning(type, errors) {\r\n    if (typeof console !== 'undefined' && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined') {\r\n      if (errors.every(function (e) {\r\n        return typeof e === 'string';\r\n      })) {\r\n        console.warn(type, errors);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction convertFieldsError(errors) {\r\n  if (!errors || !errors.length) return null;\r\n  var fields = {};\r\n  errors.forEach(function (error) {\r\n    var field = error.field;\r\n    fields[field] = fields[field] || [];\r\n    fields[field].push(error);\r\n  });\r\n  return fields;\r\n}\r\nfunction format(template) {\r\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    args[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  var i = 0;\r\n  var len = args.length;\r\n\r\n  if (typeof template === 'function') {\r\n    return template.apply(null, args);\r\n  }\r\n\r\n  if (typeof template === 'string') {\r\n    var str = template.replace(formatRegExp, function (x) {\r\n      if (x === '%%') {\r\n        return '%';\r\n      }\r\n\r\n      if (i >= len) {\r\n        return x;\r\n      }\r\n\r\n      switch (x) {\r\n        case '%s':\r\n          return String(args[i++]);\r\n\r\n        case '%d':\r\n          return Number(args[i++]);\r\n\r\n        case '%j':\r\n          try {\r\n            return JSON.stringify(args[i++]);\r\n          } catch (_) {\r\n            return '[Circular]';\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          return x;\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n\r\n  return template;\r\n}\r\n\r\nfunction isNativeStringType(type) {\r\n  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'date' || type === 'pattern';\r\n}\r\n\r\nfunction isEmptyValue(value, type) {\r\n  if (value === undefined || value === null) {\r\n    return true;\r\n  }\r\n\r\n  if (type === 'array' && Array.isArray(value) && !value.length) {\r\n    return true;\r\n  }\r\n\r\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction asyncParallelArray(arr, func, callback) {\r\n  var results = [];\r\n  var total = 0;\r\n  var arrLength = arr.length;\r\n\r\n  function count(errors) {\r\n    results.push.apply(results, errors || []);\r\n    total++;\r\n\r\n    if (total === arrLength) {\r\n      callback(results);\r\n    }\r\n  }\r\n\r\n  arr.forEach(function (a) {\r\n    func(a, count);\r\n  });\r\n}\r\n\r\nfunction asyncSerialArray(arr, func, callback) {\r\n  var index = 0;\r\n  var arrLength = arr.length;\r\n\r\n  function next(errors) {\r\n    if (errors && errors.length) {\r\n      callback(errors);\r\n      return;\r\n    }\r\n\r\n    var original = index;\r\n    index = index + 1;\r\n\r\n    if (original < arrLength) {\r\n      func(arr[original], next);\r\n    } else {\r\n      callback([]);\r\n    }\r\n  }\r\n\r\n  next([]);\r\n}\r\n\r\nfunction flattenObjArr(objArr) {\r\n  var ret = [];\r\n  Object.keys(objArr).forEach(function (k) {\r\n    ret.push.apply(ret, objArr[k] || []);\r\n  });\r\n  return ret;\r\n}\r\n\r\nvar AsyncValidationError = /*#__PURE__*/function (_Error) {\r\n  _inheritsLoose(AsyncValidationError, _Error);\r\n\r\n  function AsyncValidationError(errors, fields) {\r\n    var _this;\r\n\r\n    _this = _Error.call(this, 'Async Validation Error') || this;\r\n    _this.errors = errors;\r\n    _this.fields = fields;\r\n    return _this;\r\n  }\r\n\r\n  return AsyncValidationError;\r\n}( /*#__PURE__*/_wrapNativeSuper(Error));\r\nfunction asyncMap(objArr, option, func, callback, source) {\r\n  if (option.first) {\r\n    var _pending = new Promise(function (resolve, reject) {\r\n      var next = function next(errors) {\r\n        callback(errors);\r\n        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve(source);\r\n      };\r\n\r\n      var flattenArr = flattenObjArr(objArr);\r\n      asyncSerialArray(flattenArr, func, next);\r\n    });\r\n\r\n    _pending[\"catch\"](function (e) {\r\n      return e;\r\n    });\r\n\r\n    return _pending;\r\n  }\r\n\r\n  var firstFields = option.firstFields === true ? Object.keys(objArr) : option.firstFields || [];\r\n  var objArrKeys = Object.keys(objArr);\r\n  var objArrLength = objArrKeys.length;\r\n  var total = 0;\r\n  var results = [];\r\n  var pending = new Promise(function (resolve, reject) {\r\n    var next = function next(errors) {\r\n      results.push.apply(results, errors);\r\n      total++;\r\n\r\n      if (total === objArrLength) {\r\n        callback(results);\r\n        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve(source);\r\n      }\r\n    };\r\n\r\n    if (!objArrKeys.length) {\r\n      callback(results);\r\n      resolve(source);\r\n    }\r\n\r\n    objArrKeys.forEach(function (key) {\r\n      var arr = objArr[key];\r\n\r\n      if (firstFields.indexOf(key) !== -1) {\r\n        asyncSerialArray(arr, func, next);\r\n      } else {\r\n        asyncParallelArray(arr, func, next);\r\n      }\r\n    });\r\n  });\r\n  pending[\"catch\"](function (e) {\r\n    return e;\r\n  });\r\n  return pending;\r\n}\r\n\r\nfunction isErrorObj(obj) {\r\n  return !!(obj && obj.message !== undefined);\r\n}\r\n\r\nfunction getValue(value, path) {\r\n  var v = value;\r\n\r\n  for (var i = 0; i < path.length; i++) {\r\n    if (v == undefined) {\r\n      return v;\r\n    }\r\n\r\n    v = v[path[i]];\r\n  }\r\n\r\n  return v;\r\n}\r\n\r\nfunction complementError(rule, source) {\r\n  return function (oe) {\r\n    var fieldValue;\r\n\r\n    if (rule.fullFields) {\r\n      fieldValue = getValue(source, rule.fullFields);\r\n    } else {\r\n      fieldValue = source[oe.field || rule.fullField];\r\n    }\r\n\r\n    if (isErrorObj(oe)) {\r\n      oe.field = oe.field || rule.fullField;\r\n      oe.fieldValue = fieldValue;\r\n      return oe;\r\n    }\r\n\r\n    return {\r\n      message: typeof oe === 'function' ? oe() : oe,\r\n      fieldValue: fieldValue,\r\n      field: oe.field || rule.fullField\r\n    };\r\n  };\r\n}\r\nfunction deepMerge(target, source) {\r\n  if (source) {\r\n    for (var s in source) {\r\n      if (source.hasOwnProperty(s)) {\r\n        var value = source[s];\r\n\r\n        if (typeof value === 'object' && typeof target[s] === 'object') {\r\n          target[s] = _extends({}, target[s], value);\r\n        } else {\r\n          target[s] = value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nvar required$1 = function required(rule, value, source, errors, options, type) {\r\n  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {\r\n    errors.push(format(options.messages.required, rule.fullField));\r\n  }\r\n};\r\n\r\n/**\r\n *  Rule for validating whitespace.\r\n *\r\n *  @param rule The validation rule.\r\n *  @param value The value of the field on the source object.\r\n *  @param source The source object being validated.\r\n *  @param errors An array of errors that this rule may add\r\n *  validation errors to.\r\n *  @param options The validation options.\r\n *  @param options.messages The validation messages.\r\n */\r\n\r\nvar whitespace = function whitespace(rule, value, source, errors, options) {\r\n  if (/^\\s+$/.test(value) || value === '') {\r\n    errors.push(format(options.messages.whitespace, rule.fullField));\r\n  }\r\n};\r\n\r\n// https://github.com/kevva/url-regex/blob/master/index.js\r\nvar urlReg;\r\nvar getUrlRegex = (function () {\r\n  if (urlReg) {\r\n    return urlReg;\r\n  }\r\n\r\n  var word = '[a-fA-F\\\\d:]';\r\n\r\n  var b = function b(options) {\r\n    return options && options.includeBoundaries ? \"(?:(?<=\\\\s|^)(?=\" + word + \")|(?<=\" + word + \")(?=\\\\s|$))\" : '';\r\n  };\r\n\r\n  var v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\r\n  var v6seg = '[a-fA-F\\\\d]{1,4}';\r\n  var v6 = (\"\\n(?:\\n(?:\" + v6seg + \":){7}(?:\" + v6seg + \"|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\\n(?:\" + v6seg + \":){6}(?:\" + v4 + \"|:\" + v6seg + \"|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\\n(?:\" + v6seg + \":){5}(?::\" + v4 + \"|(?::\" + v6seg + \"){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\\n(?:\" + v6seg + \":){4}(?:(?::\" + v6seg + \"){0,1}:\" + v4 + \"|(?::\" + v6seg + \"){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\\n(?:\" + v6seg + \":){3}(?:(?::\" + v6seg + \"){0,2}:\" + v4 + \"|(?::\" + v6seg + \"){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\\n(?:\" + v6seg + \":){2}(?:(?::\" + v6seg + \"){0,3}:\" + v4 + \"|(?::\" + v6seg + \"){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\\n(?:\" + v6seg + \":){1}(?:(?::\" + v6seg + \"){0,4}:\" + v4 + \"|(?::\" + v6seg + \"){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\\n(?::(?:(?::\" + v6seg + \"){0,5}:\" + v4 + \"|(?::\" + v6seg + \"){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\\n\").replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim(); // Pre-compile only the exact regexes because adding a global flag make regexes stateful\r\n\r\n  var v46Exact = new RegExp(\"(?:^\" + v4 + \"$)|(?:^\" + v6 + \"$)\");\r\n  var v4exact = new RegExp(\"^\" + v4 + \"$\");\r\n  var v6exact = new RegExp(\"^\" + v6 + \"$\");\r\n\r\n  var ip = function ip(options) {\r\n    return options && options.exact ? v46Exact : new RegExp(\"(?:\" + b(options) + v4 + b(options) + \")|(?:\" + b(options) + v6 + b(options) + \")\", 'g');\r\n  };\r\n\r\n  ip.v4 = function (options) {\r\n    return options && options.exact ? v4exact : new RegExp(\"\" + b(options) + v4 + b(options), 'g');\r\n  };\r\n\r\n  ip.v6 = function (options) {\r\n    return options && options.exact ? v6exact : new RegExp(\"\" + b(options) + v6 + b(options), 'g');\r\n  };\r\n\r\n  var protocol = \"(?:(?:[a-z]+:)?//)\";\r\n  var auth = '(?:\\\\S+(?::\\\\S*)?@)?';\r\n  var ipv4 = ip.v4().source;\r\n  var ipv6 = ip.v6().source;\r\n  var host = \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\";\r\n  var domain = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\";\r\n  var tld = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\";\r\n  var port = '(?::\\\\d{2,5})?';\r\n  var path = '(?:[/?#][^\\\\s\"]*)?';\r\n  var regex = \"(?:\" + protocol + \"|www\\\\.)\" + auth + \"(?:localhost|\" + ipv4 + \"|\" + ipv6 + \"|\" + host + domain + tld + \")\" + port + path;\r\n  urlReg = new RegExp(\"(?:^\" + regex + \"$)\", 'i');\r\n  return urlReg;\r\n});\r\n\r\n/* eslint max-len:0 */\r\n\r\nvar pattern$2 = {\r\n  // http://emailregex.com/\r\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\r\n  // url: new RegExp(\r\n  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\r\n  //   'i',\r\n  // ),\r\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\r\n};\r\nvar types = {\r\n  integer: function integer(value) {\r\n    return types.number(value) && parseInt(value, 10) === value;\r\n  },\r\n  \"float\": function float(value) {\r\n    return types.number(value) && !types.integer(value);\r\n  },\r\n  array: function array(value) {\r\n    return Array.isArray(value);\r\n  },\r\n  regexp: function regexp(value) {\r\n    if (value instanceof RegExp) {\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      return !!new RegExp(value);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  },\r\n  date: function date(value) {\r\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function' && !isNaN(value.getTime());\r\n  },\r\n  number: function number(value) {\r\n    if (isNaN(value)) {\r\n      return false;\r\n    }\r\n\r\n    return typeof value === 'number';\r\n  },\r\n  object: function object(value) {\r\n    return typeof value === 'object' && !types.array(value);\r\n  },\r\n  method: function method(value) {\r\n    return typeof value === 'function';\r\n  },\r\n  email: function email(value) {\r\n    return typeof value === 'string' && value.length <= 320 && !!value.match(pattern$2.email);\r\n  },\r\n  url: function url(value) {\r\n    return typeof value === 'string' && value.length <= 2048 && !!value.match(getUrlRegex());\r\n  },\r\n  hex: function hex(value) {\r\n    return typeof value === 'string' && !!value.match(pattern$2.hex);\r\n  }\r\n};\r\n\r\nvar type$1 = function type(rule, value, source, errors, options) {\r\n  if (rule.required && value === undefined) {\r\n    required$1(rule, value, source, errors, options);\r\n    return;\r\n  }\r\n\r\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\r\n  var ruleType = rule.type;\r\n\r\n  if (custom.indexOf(ruleType) > -1) {\r\n    if (!types[ruleType](value)) {\r\n      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\r\n    } // straight typeof check\r\n\r\n  } else if (ruleType && typeof value !== rule.type) {\r\n    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\r\n  }\r\n};\r\n\r\nvar range = function range(rule, value, source, errors, options) {\r\n  var len = typeof rule.len === 'number';\r\n  var min = typeof rule.min === 'number';\r\n  var max = typeof rule.max === 'number'; // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\r\n\r\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\n  var val = value;\r\n  var key = null;\r\n  var num = typeof value === 'number';\r\n  var str = typeof value === 'string';\r\n  var arr = Array.isArray(value);\r\n\r\n  if (num) {\r\n    key = 'number';\r\n  } else if (str) {\r\n    key = 'string';\r\n  } else if (arr) {\r\n    key = 'array';\r\n  } // if the value is not of a supported type for range validation\r\n  // the validation rule rule should use the\r\n  // type property to also test for a particular type\r\n\r\n\r\n  if (!key) {\r\n    return false;\r\n  }\r\n\r\n  if (arr) {\r\n    val = value.length;\r\n  }\r\n\r\n  if (str) {\r\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\r\n    val = value.replace(spRegexp, '_').length;\r\n  }\r\n\r\n  if (len) {\r\n    if (val !== rule.len) {\r\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\r\n    }\r\n  } else if (min && !max && val < rule.min) {\r\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\r\n  } else if (max && !min && val > rule.max) {\r\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\r\n  } else if (min && max && (val < rule.min || val > rule.max)) {\r\n    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));\r\n  }\r\n};\r\n\r\nvar ENUM$1 = 'enum';\r\n\r\nvar enumerable$1 = function enumerable(rule, value, source, errors, options) {\r\n  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];\r\n\r\n  if (rule[ENUM$1].indexOf(value) === -1) {\r\n    errors.push(format(options.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(', ')));\r\n  }\r\n};\r\n\r\nvar pattern$1 = function pattern(rule, value, source, errors, options) {\r\n  if (rule.pattern) {\r\n    if (rule.pattern instanceof RegExp) {\r\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\r\n      // flag is accidentally set to `true`, which in a validation scenario\r\n      // is not necessary and the result might be misleading\r\n      rule.pattern.lastIndex = 0;\r\n\r\n      if (!rule.pattern.test(value)) {\r\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\r\n      }\r\n    } else if (typeof rule.pattern === 'string') {\r\n      var _pattern = new RegExp(rule.pattern);\r\n\r\n      if (!_pattern.test(value)) {\r\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar rules = {\r\n  required: required$1,\r\n  whitespace: whitespace,\r\n  type: type$1,\r\n  range: range,\r\n  \"enum\": enumerable$1,\r\n  pattern: pattern$1\r\n};\r\n\r\nvar string = function string(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value, 'string') && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options, 'string');\r\n\r\n    if (!isEmptyValue(value, 'string')) {\r\n      rules.type(rule, value, source, errors, options);\r\n      rules.range(rule, value, source, errors, options);\r\n      rules.pattern(rule, value, source, errors, options);\r\n\r\n      if (rule.whitespace === true) {\r\n        rules.whitespace(rule, value, source, errors, options);\r\n      }\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar method = function method(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules.type(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar number = function number(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (value === '') {\r\n      value = undefined;\r\n    }\r\n\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules.type(rule, value, source, errors, options);\r\n      rules.range(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar _boolean = function _boolean(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules.type(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar regexp = function regexp(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (!isEmptyValue(value)) {\r\n      rules.type(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar integer = function integer(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules.type(rule, value, source, errors, options);\r\n      rules.range(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar floatFn = function floatFn(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules.type(rule, value, source, errors, options);\r\n      rules.range(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar array = function array(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if ((value === undefined || value === null) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options, 'array');\r\n\r\n    if (value !== undefined && value !== null) {\r\n      rules.type(rule, value, source, errors, options);\r\n      rules.range(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar object = function object(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules.type(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar ENUM = 'enum';\r\n\r\nvar enumerable = function enumerable(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (value !== undefined) {\r\n      rules[ENUM](rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar pattern = function pattern(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value, 'string') && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (!isEmptyValue(value, 'string')) {\r\n      rules.pattern(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar date = function date(rule, value, callback, source, options) {\r\n  // console.log('integer rule called %j', rule);\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value, 'date') && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n\r\n    if (!isEmptyValue(value, 'date')) {\r\n      var dateObject;\r\n\r\n      if (value instanceof Date) {\r\n        dateObject = value;\r\n      } else {\r\n        dateObject = new Date(value);\r\n      }\r\n\r\n      rules.type(rule, dateObject, source, errors, options);\r\n\r\n      if (dateObject) {\r\n        rules.range(rule, dateObject.getTime(), source, errors, options);\r\n      }\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar required = function required(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var type = Array.isArray(value) ? 'array' : typeof value;\r\n  rules.required(rule, value, source, errors, options, type);\r\n  callback(errors);\r\n};\r\n\r\nvar type = function type(rule, value, callback, source, options) {\r\n  var ruleType = rule.type;\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value, ruleType) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options, ruleType);\r\n\r\n    if (!isEmptyValue(value, ruleType)) {\r\n      rules.type(rule, value, source, errors, options);\r\n    }\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar any = function any(rule, value, callback, source, options) {\r\n  var errors = [];\r\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\r\n\r\n  if (validate) {\r\n    if (isEmptyValue(value) && !rule.required) {\r\n      return callback();\r\n    }\r\n\r\n    rules.required(rule, value, source, errors, options);\r\n  }\r\n\r\n  callback(errors);\r\n};\r\n\r\nvar validators = {\r\n  string: string,\r\n  method: method,\r\n  number: number,\r\n  \"boolean\": _boolean,\r\n  regexp: regexp,\r\n  integer: integer,\r\n  \"float\": floatFn,\r\n  array: array,\r\n  object: object,\r\n  \"enum\": enumerable,\r\n  pattern: pattern,\r\n  date: date,\r\n  url: type,\r\n  hex: type,\r\n  email: type,\r\n  required: required,\r\n  any: any\r\n};\r\n\r\nfunction newMessages() {\r\n  return {\r\n    \"default\": 'Validation error on field %s',\r\n    required: '%s is required',\r\n    \"enum\": '%s must be one of %s',\r\n    whitespace: '%s cannot be empty',\r\n    date: {\r\n      format: '%s date %s is invalid for format %s',\r\n      parse: '%s date could not be parsed, %s is invalid ',\r\n      invalid: '%s date %s is invalid'\r\n    },\r\n    types: {\r\n      string: '%s is not a %s',\r\n      method: '%s is not a %s (function)',\r\n      array: '%s is not an %s',\r\n      object: '%s is not an %s',\r\n      number: '%s is not a %s',\r\n      date: '%s is not a %s',\r\n      \"boolean\": '%s is not a %s',\r\n      integer: '%s is not an %s',\r\n      \"float\": '%s is not a %s',\r\n      regexp: '%s is not a valid %s',\r\n      email: '%s is not a valid %s',\r\n      url: '%s is not a valid %s',\r\n      hex: '%s is not a valid %s'\r\n    },\r\n    string: {\r\n      len: '%s must be exactly %s characters',\r\n      min: '%s must be at least %s characters',\r\n      max: '%s cannot be longer than %s characters',\r\n      range: '%s must be between %s and %s characters'\r\n    },\r\n    number: {\r\n      len: '%s must equal %s',\r\n      min: '%s cannot be less than %s',\r\n      max: '%s cannot be greater than %s',\r\n      range: '%s must be between %s and %s'\r\n    },\r\n    array: {\r\n      len: '%s must be exactly %s in length',\r\n      min: '%s cannot be less than %s in length',\r\n      max: '%s cannot be greater than %s in length',\r\n      range: '%s must be between %s and %s in length'\r\n    },\r\n    pattern: {\r\n      mismatch: '%s value %s does not match pattern %s'\r\n    },\r\n    clone: function clone() {\r\n      var cloned = JSON.parse(JSON.stringify(this));\r\n      cloned.clone = this.clone;\r\n      return cloned;\r\n    }\r\n  };\r\n}\r\nvar messages = newMessages();\r\n\r\n/**\r\n *  Encapsulates a validation schema.\r\n *\r\n *  @param descriptor An object declaring validation rules\r\n *  for this schema.\r\n */\r\n\r\nvar Schema = /*#__PURE__*/function () {\r\n  // ========================= Static =========================\r\n  // ======================== Instance ========================\r\n  function Schema(descriptor) {\r\n    this.rules = null;\r\n    this._messages = messages;\r\n    this.define(descriptor);\r\n  }\r\n\r\n  var _proto = Schema.prototype;\r\n\r\n  _proto.define = function define(rules) {\r\n    var _this = this;\r\n\r\n    if (!rules) {\r\n      throw new Error('Cannot configure a schema with no rules');\r\n    }\r\n\r\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\r\n      throw new Error('Rules must be an object');\r\n    }\r\n\r\n    this.rules = {};\r\n    Object.keys(rules).forEach(function (name) {\r\n      var item = rules[name];\r\n      _this.rules[name] = Array.isArray(item) ? item : [item];\r\n    });\r\n  };\r\n\r\n  _proto.messages = function messages(_messages) {\r\n    if (_messages) {\r\n      this._messages = deepMerge(newMessages(), _messages);\r\n    }\r\n\r\n    return this._messages;\r\n  };\r\n\r\n  _proto.validate = function validate(source_, o, oc) {\r\n    var _this2 = this;\r\n\r\n    if (o === void 0) {\r\n      o = {};\r\n    }\r\n\r\n    if (oc === void 0) {\r\n      oc = function oc() {};\r\n    }\r\n\r\n    var source = source_;\r\n    var options = o;\r\n    var callback = oc;\r\n\r\n    if (typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n\r\n    if (!this.rules || Object.keys(this.rules).length === 0) {\r\n      if (callback) {\r\n        callback(null, source);\r\n      }\r\n\r\n      return Promise.resolve(source);\r\n    }\r\n\r\n    function complete(results) {\r\n      var errors = [];\r\n      var fields = {};\r\n\r\n      function add(e) {\r\n        if (Array.isArray(e)) {\r\n          var _errors;\r\n\r\n          errors = (_errors = errors).concat.apply(_errors, e);\r\n        } else {\r\n          errors.push(e);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < results.length; i++) {\r\n        add(results[i]);\r\n      }\r\n\r\n      if (!errors.length) {\r\n        callback(null, source);\r\n      } else {\r\n        fields = convertFieldsError(errors);\r\n        callback(errors, fields);\r\n      }\r\n    }\r\n\r\n    if (options.messages) {\r\n      var messages$1 = this.messages();\r\n\r\n      if (messages$1 === messages) {\r\n        messages$1 = newMessages();\r\n      }\r\n\r\n      deepMerge(messages$1, options.messages);\r\n      options.messages = messages$1;\r\n    } else {\r\n      options.messages = this.messages();\r\n    }\r\n\r\n    var series = {};\r\n    var keys = options.keys || Object.keys(this.rules);\r\n    keys.forEach(function (z) {\r\n      var arr = _this2.rules[z];\r\n      var value = source[z];\r\n      arr.forEach(function (r) {\r\n        var rule = r;\r\n\r\n        if (typeof rule.transform === 'function') {\r\n          if (source === source_) {\r\n            source = _extends({}, source);\r\n          }\r\n\r\n          value = source[z] = rule.transform(value);\r\n        }\r\n\r\n        if (typeof rule === 'function') {\r\n          rule = {\r\n            validator: rule\r\n          };\r\n        } else {\r\n          rule = _extends({}, rule);\r\n        } // Fill validator. Skip if nothing need to validate\r\n\r\n\r\n        rule.validator = _this2.getValidationMethod(rule);\r\n\r\n        if (!rule.validator) {\r\n          return;\r\n        }\r\n\r\n        rule.field = z;\r\n        rule.fullField = rule.fullField || z;\r\n        rule.type = _this2.getType(rule);\r\n        series[z] = series[z] || [];\r\n        series[z].push({\r\n          rule: rule,\r\n          value: value,\r\n          source: source,\r\n          field: z\r\n        });\r\n      });\r\n    });\r\n    var errorFields = {};\r\n    return asyncMap(series, options, function (data, doIt) {\r\n      var rule = data.rule;\r\n      var deep = (rule.type === 'object' || rule.type === 'array') && (typeof rule.fields === 'object' || typeof rule.defaultField === 'object');\r\n      deep = deep && (rule.required || !rule.required && data.value);\r\n      rule.field = data.field;\r\n\r\n      function addFullField(key, schema) {\r\n        return _extends({}, schema, {\r\n          fullField: rule.fullField + \".\" + key,\r\n          fullFields: rule.fullFields ? [].concat(rule.fullFields, [key]) : [key]\r\n        });\r\n      }\r\n\r\n      function cb(e) {\r\n        if (e === void 0) {\r\n          e = [];\r\n        }\r\n\r\n        var errorList = Array.isArray(e) ? e : [e];\r\n\r\n        if (!options.suppressWarning && errorList.length) {\r\n          Schema.warning('async-validator:', errorList);\r\n        }\r\n\r\n        if (errorList.length && rule.message !== undefined) {\r\n          errorList = [].concat(rule.message);\r\n        } // Fill error info\r\n\r\n\r\n        var filledErrors = errorList.map(complementError(rule, source));\r\n\r\n        if (options.first && filledErrors.length) {\r\n          errorFields[rule.field] = 1;\r\n          return doIt(filledErrors);\r\n        }\r\n\r\n        if (!deep) {\r\n          doIt(filledErrors);\r\n        } else {\r\n          // if rule is required but the target object\r\n          // does not exist fail at the rule level and don't\r\n          // go deeper\r\n          if (rule.required && !data.value) {\r\n            if (rule.message !== undefined) {\r\n              filledErrors = [].concat(rule.message).map(complementError(rule, source));\r\n            } else if (options.error) {\r\n              filledErrors = [options.error(rule, format(options.messages.required, rule.field))];\r\n            }\r\n\r\n            return doIt(filledErrors);\r\n          }\r\n\r\n          var fieldsSchema = {};\r\n\r\n          if (rule.defaultField) {\r\n            Object.keys(data.value).map(function (key) {\r\n              fieldsSchema[key] = rule.defaultField;\r\n            });\r\n          }\r\n\r\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\r\n          var paredFieldsSchema = {};\r\n          Object.keys(fieldsSchema).forEach(function (field) {\r\n            var fieldSchema = fieldsSchema[field];\r\n            var fieldSchemaList = Array.isArray(fieldSchema) ? fieldSchema : [fieldSchema];\r\n            paredFieldsSchema[field] = fieldSchemaList.map(addFullField.bind(null, field));\r\n          });\r\n          var schema = new Schema(paredFieldsSchema);\r\n          schema.messages(options.messages);\r\n\r\n          if (data.rule.options) {\r\n            data.rule.options.messages = options.messages;\r\n            data.rule.options.error = options.error;\r\n          }\r\n\r\n          schema.validate(data.value, data.rule.options || options, function (errs) {\r\n            var finalErrors = [];\r\n\r\n            if (filledErrors && filledErrors.length) {\r\n              finalErrors.push.apply(finalErrors, filledErrors);\r\n            }\r\n\r\n            if (errs && errs.length) {\r\n              finalErrors.push.apply(finalErrors, errs);\r\n            }\r\n\r\n            doIt(finalErrors.length ? finalErrors : null);\r\n          });\r\n        }\r\n      }\r\n\r\n      var res;\r\n\r\n      if (rule.asyncValidator) {\r\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\r\n      } else if (rule.validator) {\r\n        try {\r\n          res = rule.validator(rule, data.value, cb, data.source, options);\r\n        } catch (error) {\r\n          console.error == null ? void 0 : console.error(error); // rethrow to report error\r\n\r\n          if (!options.suppressValidatorError) {\r\n            setTimeout(function () {\r\n              throw error;\r\n            }, 0);\r\n          }\r\n\r\n          cb(error.message);\r\n        }\r\n\r\n        if (res === true) {\r\n          cb();\r\n        } else if (res === false) {\r\n          cb(typeof rule.message === 'function' ? rule.message(rule.fullField || rule.field) : rule.message || (rule.fullField || rule.field) + \" fails\");\r\n        } else if (res instanceof Array) {\r\n          cb(res);\r\n        } else if (res instanceof Error) {\r\n          cb(res.message);\r\n        }\r\n      }\r\n\r\n      if (res && res.then) {\r\n        res.then(function () {\r\n          return cb();\r\n        }, function (e) {\r\n          return cb(e);\r\n        });\r\n      }\r\n    }, function (results) {\r\n      complete(results);\r\n    }, source);\r\n  };\r\n\r\n  _proto.getType = function getType(rule) {\r\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\r\n      rule.type = 'pattern';\r\n    }\r\n\r\n    if (typeof rule.validator !== 'function' && rule.type && !validators.hasOwnProperty(rule.type)) {\r\n      throw new Error(format('Unknown rule type %s', rule.type));\r\n    }\r\n\r\n    return rule.type || 'string';\r\n  };\r\n\r\n  _proto.getValidationMethod = function getValidationMethod(rule) {\r\n    if (typeof rule.validator === 'function') {\r\n      return rule.validator;\r\n    }\r\n\r\n    var keys = Object.keys(rule);\r\n    var messageIndex = keys.indexOf('message');\r\n\r\n    if (messageIndex !== -1) {\r\n      keys.splice(messageIndex, 1);\r\n    }\r\n\r\n    if (keys.length === 1 && keys[0] === 'required') {\r\n      return validators.required;\r\n    }\r\n\r\n    return validators[this.getType(rule)] || undefined;\r\n  };\r\n\r\n  return Schema;\r\n}();\r\n\r\nSchema.register = function register(type, validator) {\r\n  if (typeof validator !== 'function') {\r\n    throw new Error('Cannot register a validator by type, validator is not a function');\r\n  }\r\n\r\n  validators[type] = validator;\r\n};\r\n\r\nSchema.warning = warning;\r\nSchema.messages = messages;\r\nSchema.validators = validators;\r\n\r\nexports[\"default\"] = Schema;\r\n//# sourceMappingURL=index.js.map\r\n"]}