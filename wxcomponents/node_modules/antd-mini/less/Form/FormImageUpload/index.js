import { __assign } from "tslib";
import { Component, triggerEvent, getValueFromProps } from '../../_util/simply';
import { resolveEventValue } from '../../_util/platform';
import { FormImageUploadDefaultProps } from './props';
import { createForm } from '../form';
Component(FormImageUploadDefaultProps, {
    handleRef: function (imageUpload) {
        this.imageUpload = imageUpload;
    },
    onChange: function (value) {
        this.emit('onChange', resolveEventValue(value));
        triggerEvent(this, 'change', resolveEventValue(value));
    },
    onPreview: function (file) {
        triggerEvent(this, 'preview', resolveEventValue(file));
    },
    onChooseImageError: function (err) {
        triggerEvent(this, 'chooseImageError', resolveEventValue(err));
    },
    handleUpload: function (localFile) {
        var onUpload = getValueFromProps(this, 'onUpload');
        if (!onUpload) {
            throw new Error('need props onUpload');
        }
        return onUpload(localFile);
    },
    handleRemove: function (file) {
        var onRemove = getValueFromProps(this, 'onRemove');
        if (onRemove) {
            return onRemove(file);
        }
    },
    handleBeforeUpload: function (localFileList) {
        var onBeforeUpload = getValueFromProps(this, 'onBeforeUpload');
        if (onBeforeUpload) {
            return onBeforeUpload(localFileList);
        }
    },
}, {}, [
    createForm({
        methods: {
            setFormData: function (values) {
                this.setData(__assign(__assign({}, this.data), { formData: __assign(__assign({}, this.data.formData), values) }));
                this.imageUpload && this.imageUpload.update(this.data.formData.value);
            },
        },
    }),
], {});
